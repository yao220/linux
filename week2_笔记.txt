1.pgrep命令的使用
pgrep是通过程序的名字来查询进程的工具，一般是用来判断程序是否正在运行。在服务器的配置和管理中，这个工具常被应用，简单明了；

用法：
#ps 参数选项 程序名

常用参数：
-l 列出程序名和进程ID；
-o 进程起始的ID；
-n 进程终止的ID；

2./proc目录中的常见文件
    2.1 cmdline 启动当前进程的完整命令，但僵尸进程目录中的此文件不包含任何信息；
    2.2 cwd 指向当前进程运行目录的一个符号链接；
    2.3 environ 当前进程的环境变量列表，彼此间用空字符（NULL）隔开；变量用大写字母表示，其值用小写字母表示；
    2.4 exe 指向启动当前进程的可执行文件（完整路径）的符号链接，通过/proc/N/exe可以启动当前进程的一个拷贝；
    2.5 fd 这是一个目录，包含当前进程打开的每一个文件的文件描述符（file descriptor)，这些文件描述符是指向实际文件的一个符号链接；

3.kill命令
用来终止指定的进程的运行，是linux下进程管理的常用命令。通常，终止一个前台进程可以使用ctrl+c键，但是对于一个后台程序就必须用
kill命令终止，我们需要使用ps/pidof/pstree/top等工具获取进程PID,然后使用kill命令来杀掉该进程。kill命令是通过向进程发送指定的信
号来结束相应进程的。在默认情况下，采用编号为15的TERM信号将终止所有不能捕获该信号的进程。对于那些可以捕获该信号的进程就要
用编号为9的kill信号，强行“杀掉”该进程。

命令格式： kill[参数][进程号]

命令功能：发送指定的信号到相应进程。不指定信号将发送SIGTERM（15）终止指定进程。如果仍然无法终止该程序可用"-KILL"参数，其发送的
信号为SIGKILL(9)，将强制结束进程，非root用户只能影响到自己的进程。

4.ps -ef命令
表示查看全格式的全部进程。
ps是Linux下最常用的也是非常强大的进程查看命令，常配合管道命令|和查找命令grep同时执行来查看特定进程。

参数含义：-e显示所有进程；-f全格式；-h不显示标题；-l长格式；-w宽格式；a显示终端上的所有进程，包括其他用户的进程；
r只显示正在运行的进程；x显示没有控制终端的进程。

进程状态：R运行，S终端，D不可中断，Z僵死，T停止

5.echo命令
echo[-n] 字符串，显示字符串，n表示输出不换行

6.strace命令
strace常用来跟踪进程执行时的系统调用和所接收的信号。 通过strace可以知道应用程序打开了哪些文件,以及读写了什么内容,
包括消耗的时间以及返回值等。在Linux世界，进程不能直接访问硬件设备，当进程需要访问硬件设备(比如读取磁盘文件，接收网络数据等等)时，
必须由用户态模式切换至内核态模式，通过系统调用访问硬件设备。strace可以跟踪到一个进程产生的系统调用,包括参数，返回值，执行消耗的时间。

常用参数
-o    指定跟踪信息的输出文件       
-t     记录跟踪信息的时间,以S为单位
-tt    记录跟踪信息的时间,以uS为单位

7.& 表示任务在后台执行
如：
[root@localhost local]# java -jar test.jar > log.txt &
运行 test.jar程序 ，并且置于后台执行，执行的日志重定向 到当前默认的log.txt文件中

8.&& 表示前一条命令执行成功时，才执行后一条命令
如：

[root@localhost tmp]# ls -l && cd ..
总用量 4
-rw-r–r–. 1 root root 2252 1月 4 22:25 log.txt
-rw——-. 1 root root 0 1月 3 23:23 yum.log
[root@localhost /]#

9.| 表示管道，上一条命令的输出，作为下一条命令参数(输入)

如 ：
[root@localhost ~]# ps -aux | grep aux
Warning: bad syntax, perhaps a bogus ‘-‘? See /usr/share/doc/procps-3.2.8/FAQ
root 53 0.0 0.0 0 0 ? S 16:33 0:00 [ata_aux]
root 2379 4.0 0.1 110224 1172 pts/2 R+ 22:55 0:00 ps -aux
root 2380 0.0 0.0 103316 868 pts/2 D+ 22:55 0:00 grep aux
查询全部进程后输出结果在进行过滤跟 进行中包含aux的进程。

10.|| 表示上一条命令执行失败后，才执行下一条命令，

如：

[root@localhost tmp]# als -l || cd ..
-bash: als: command not found
[root@localhost /]#

11.>符号是指：将正常信息重定向

如： find / -name “*.txt” > /tmp/log.txt
在跟目录下根据名字来查找*.tx输入的日志放置/tmp/log.txt文件中

12.&>可以将错误信息或者普通信息都重定向输出




